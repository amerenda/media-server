name: media-stack
services:
  # Sane media profiles
  profilarr:
    container_name: profilarr
    image: santiagosayshey/profilarr:latest

    ports:
      - 6868:6868

    volumes:
      - ${PROFILARR_CONFIG}:/config

    environment:
      - TZ=EST

    networks:
      servarr:

    restart: unless-stopped

  # Unified Indexer
  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:latest

    networks:
      servarr:

    ports:
      - 9696:9696

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EST
    volumes:
      - ${PROWLARR_CONFIG}:/config

    restart: unless-stopped

  # Usenet client
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd

    networks:
      servarr:

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EST

    ports:
      - 8080:8080

    volumes:
      - ${SABNZBD_CONFIG}:/config
      - ${USENET_DOWNLOADS}:/downloads
      - ${USENET_DOWNLOADS_INCOMPLETE}:/incomplete-downloads


    restart: unless-stopped

  # Movie fetcher
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest

    networks:
      servarr:

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EST

    ports:
      - 7878:7878

    volumes:
      - ${RADARR_CONFIG}:/config
      - ${MOVIES_FOLDER}:/movies
      - ${USENET_DOWNLOADS}:/downloads

    restart: "unless-stopped"

  # TV Show Fetcher
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr

    networks:
      servarr:

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EST

    volumes:
      - ${SONARR_CONFIG}:/config
      - ${TV_FOLDER}:/tv
      - ${USENET_DOWNLOADS}:/downloads
      - ${SONARR_SCRIPTS}:/scripts

    ports:
      - 8989:8989

    restart: unless-stopped

  # Subtitle fetcher
  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest

    networks:
      servarr:

    ports:
      - 6767:6767

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EST
    volumes:
      - ${BAZARR_CONFIG}:/config
      - ${TV_FOLDER}:/tv
      - ${MOVIES_FOLDER}:/movies

    restart: unless-stopped


  jellyfin:
    image: linuxserver/jellyfin:10.10.6
    container_name: jellyfin

    networks:
      servarr:

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EST
      - JELLYFIN_PublishedServerUrl=$JELLYFIN_URL
      - NVIDIA_VISIBLE_DEVICES=all

    volumes:
      - ${JELLYFIN_CONFIG}:/config
      - ${MOVIES_FOLDER}:/movies
      - ${TV_FOLDER}:/tv
      - ${TRANSCODE_FOLDER}:/transcode

    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920

    restart: unless-stopped

  dns:
    build:
      context: ./dns/
      dockerfile: Dockerfile
    container_name: dns
    env_file: .env
    networks:
      servarr:

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx

    volumes:
      - ${CERT_FOLDER}:/etc/letsencrypt
      - ${NGINX_FOLDER}:/etc/nginx/conf.d/

    ports:
      - 443:443

    networks:
      servarr:

    restart: "unless-stopped"

  certbot:
    build:
      context: ./certbot
      dockerfile: Dockerfile

        #  image: media-server-certbot
    container_name: certbot

    env_file: .env

    ports:
      - 80:80

    volumes:
      - ${CERT_FOLDER}:/etc/letsencrypt

    networks:
      servarr:

    restart: "no"

  # Transcoder
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    environment:
      - TZ=EST
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=7
      - nodeName=InternalNode
      - auth=false
      - openBrowser=true
      - maxLogSizeMB=10
      - cronPluginUpdate=
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ${TDARR_DATA}/server:/app/server
      - ${TDARR_CONFIG}:/app/configs
      - ${TDARR_DATA}/logs:/app/logs
      - ${MOVIES_FOLDER}:/media/movies
      - ${TV_FOLDER}:/media/tv
      - ${WHISPARR_FOLDER}:/media/porn
      - ${TRANSCODE_FOLDER}:/temp

    networks:
      servarr:

    devices:
      - /dev/dri:/dev/dri

networks:
  servarr:
    external: true
